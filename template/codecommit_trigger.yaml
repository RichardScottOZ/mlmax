AWSTemplateFormatVersion: 2010-09-09
Description: Codecommit with built in lambda trigger
Parameters:
  CodecommitRepo:
    Type: String
    Default: test-repo
  CodecommitBranch:
    Type: String
    Default: master

Resources:
  MyFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          import json
          import os

          def lambda_handler(event, context):
            print(event)
            references = { reference['ref'] for reference in event['Records'][0]['codecommit']['references'] }
            print("References: "  + str(references))

            #Get the repository from the event and show its git clone URL
            repository = event['Records'][0]['eventSourceARN'].split(':')[5]
            print("Repo: "  + str(repository))

            return {
                'statusCode': 200,
                'body': json.dumps(repository)
            }

      Handler: index.lambda_handler
      MemorySize: 512
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python3.6
      Timeout: 60

  # Built in resource policy for lambda
  PermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt MyFunction.Arn
      Action: "lambda:InvokeFunction"
      Principal: "codecommit.amazonaws.com"
      SourceArn: !GetAtt MyCodeCommitRepo.Arn

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "*"
                Resource: "*"

  MyCodeCommitRepo:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryDescription: A custom repository
      RepositoryName: cfn-test-repo
      Triggers:
        - Branches:
            - !Ref CodecommitBranch
          CustomData: channel_id
          DestinationArn: !GetAtt MyFunction.Arn
          # all: for all events in the specified repository and branches.
          # updateReference: for when commits are pushed to the specified repository and branches.
          # createReference: for when a new branch or tag is created in the specified repository.
          # deleteReference: for when a branch or tag is deleted in the specified repository.
          Events:
            - all
          Name: !Join ["", [!Ref MyFunction, Trigger]]
