AWSTemplateFormatVersion: "2010-09-09"
# Sample CFN YAML to demonstrate creating a crawler
Parameters:
  # The name of the crawler to be created
  CFNCrawlerName:
    Type: String
    Default: cfn-crawler
  CFNDatabaseName:
    Type: String
    Default: cfn-database
  CFNTablePrefixName:
    Type: String
    Default: cfn_crawler_
  CrawlerS3Bucket:
    Type: String
    Default: s3://wy-sandbox-singapore/test/glue_custom_schema/
# Resources section defines metadata for the Data Catalog
Resources:
  #Create IAM Role assumed by the crawler. For demonstration, this role is given all permissions.
  CFNRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "glue.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: "root"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "*"
                Resource: "*"
  # Create a database to contain tables created by the crawler
  CFNDatabase:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: !Ref CFNDatabaseName
        Description: "AWS Glue container to hold metadata tables for the flights crawler"
  #Create a crawler to crawl the flights data on a public S3 bucket
  CFNCrawler:
    Type: AWS::Glue::Crawler
    Properties:
      Name: !Ref CFNCrawlerName
      Role: !GetAtt CFNRole.Arn
      #Classifiers: none, use the default classifier
      Description: AWS Glue crawler to crawl flights data
      #Schedule: none, use default run-on-demand
      DatabaseName: !Ref CFNDatabaseName
      Classifiers:
        - !Ref MyClassifier
      Targets:
        S3Targets:
          # Public S3 bucket with the data
          - Path: !Ref CrawlerS3Bucket
      TablePrefix: !Ref CFNTablePrefixName
      SchemaChangePolicy:
        UpdateBehavior: "UPDATE_IN_DATABASE"
        DeleteBehavior: "LOG"
      Configuration: '{"Version":1.0,"CrawlerOutput":{"Partitions":{"AddOrUpdateBehavior":"InheritFromTable"},"Tables":{"AddOrUpdateBehavior":"MergeNewColumns"}}}'
      Schedule:
        ScheduleExpression: cron(0/5 * * * ? *)
  MyClassifier:
    Type: AWS::Glue::Classifier
    Properties:
      CsvClassifier:
        ContainsHeader: PRESENT
        Delimiter: ","
        Header:
          - One
          - Two
          - Three
          - Four
          - Five
          - Six
          - Seven
        Name: "CrawlerClassifier"
