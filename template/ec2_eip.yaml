AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation Sample Template Sample template EIP_With_Association: This
  template shows how to associate an Elastic IP address with an Amazon EC2
  instance - you can use this same technique to associate an EC2 instance with
  an Elastic IP Address that is not created inside the template by replacing the
  EIP reference in the AWS::EC2::EIPAssoication resource type with the IP
  address of the external EIP. **WARNING** This template creates an Amazon EC2
  instance and an Elastic IP Address. You will be billed for the AWS resources
  used if you create a stack from this template.
Parameters:
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: m5.2xlarge
    AllowedValues:
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
      - m5.12xlarge
      - m5.16xlarge
      - m5.24large
    ConstraintDescription: must be a valid EC2 instance type.
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: "AWS::EC2::KeyPair::KeyName"
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: "9"
    MaxLength: "18"
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  S3BucketName:
    Type: String
  TagName:
    Type: String

Mappings:
  AWSRegion2AMI:
    ap-southeast-1:
      AMZN2: ami-08f9c79187d4e4401

Resources:
  EC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      UserData: !Base64
      #  Set variable name
        "Fn::Join":
          - ""
          - - IPAddress=
            - !Ref IPAddress
      # Start ssm agent
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          sudo yum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm

      InstanceType: !Ref InstanceType
      SecurityGroups:
        - !Ref InstanceSecurityGroup
      KeyName: !Ref KeyName
      Tags:
        - Key: Name
          Value: !Ref TagName
      ImageId: !FindInMap
        - AWSRegion2AMI
        - !Ref "AWS::Region"
        - AMZN2
      IamInstanceProfile: !Ref InstanceProfile
  InstanceSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Enable SSH access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: "22"
          ToPort: "22"
          CidrIp: !Ref SSHLocation
  IPAddress:
    Type: "AWS::EC2::EIP"
  IPAssoc:
    Type: "AWS::EC2::EIPAssociation"
    Properties:
      InstanceId: !Ref EC2Instance
      EIP: !Ref IPAddress
  InstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: /
      Roles:
        - !Ref InstanceRole
  InstanceRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        # Use policy created in existing stack
        - !Ref S3PolicyIL
        # Use policy created in external policy stack
        - !ImportValue S3PolicyExport
        # Use managed policy
        - arn:aws:iam::aws:policy/AmazonSageMakerFullAccess
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
  # Custom inline policy
  S3PolicyIL:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Path: "/"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowRWAccessToBucket
            Effect: Allow
            Action:
              - "s3:*"
            Resource:
              - !Sub "arn:aws:s3:::${S3BucketName}"
              - !Sub "arn:aws:s3:::${S3BucketName}/*"
Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref EC2Instance
  InstanceIPAddress:
    Description: IP address of the newly created EC2 instance
    Value: !Ref IPAddress
