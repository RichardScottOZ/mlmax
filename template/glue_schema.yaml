---
AWSTemplateFormatVersion: "2010-09-09"
# Sample CloudFormation template in YAML to demonstrate creating a database, a table, and partitions
# This is used to create custom schema without running crawler.

# Parameters substituted in the Resources section
# These parameters are names of the resources created in the Data Catalog
Parameters:
  CFNDatabaseName:
    Type: String
    Default: cfn_test_database
  CFNTableName1:
    Type: String
    Default: cfn_test_schema
  GlueS3Bucket:
    Type: String
    Default: s3://wy-sandbox-singapore/test/glue_custom_schema2/
# Resources to create metadata in the Data Catalog
Resources:
  # Create an AWS Glue database
  CFNDatabase:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: !Ref CFNDatabaseName
        Description: Database to hold tables

  # Create an AWS Glue table
  CFNTable:
    # Creating the table waits for the database to be created
    DependsOn: CFNDatabase
    Type: AWS::Glue::Table
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref CFNDatabaseName
      TableInput:
        Name: !Ref CFNTableName1
        Description: Define the first few columns of table
        TableType: EXTERNAL_TABLE
        Parameters: { "classification": "csv" }
        #       ViewExpandedText: String
        # PartitionKeys:
        #   - Name: year
        #     Type: string
        #   - Name: month
        #     Type: string
        StorageDescriptor:
          OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
          Columns:
            # Partiton key needs to be added to column as well
            # - Name: year
            #   Type: string
            # - Name: month
            #   Type: string
            - Name: age
              Type: bigint
            - Name: sex
              Type: string
            - Name: bmi
              Type: double
            - Name: children
              Type: bigint
            - Name: smoker
              Type: string
            - Name: region
              Type: string
            - Name: charges
              Type: double
          InputFormat: org.apache.hadoop.mapred.TextInputFormat
          Location: !Ref GlueS3Bucket
          SerdeInfo:
            Parameters:
              field.delim: ","
              skip.header.line.count: 1
            SerializationLibrary: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
  # # Partition 1
  # # Create an AWS Glue partition
  # CFNPartitionMon1:
  #   DependsOn: CFNTable
  #   Type: AWS::Glue::Partition
  #   Properties:
  #     CatalogId: !Ref AWS::AccountId
  #     DatabaseName: !Ref CFNDatabaseName
  #     TableName: !Ref CFNTableName1
  #     PartitionInput:
  #       Values:
  #         - 1
  #       StorageDescriptor:
  #         OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
  #         Columns:
  #           - Name: mon
  #             Type: bigint
  #         InputFormat: org.apache.hadoop.mapred.TextInputFormat
  #         Location: s3://wy-sandbox-singapore/test/glue_custom_schema/mon=1/
  #         SerdeInfo:
  #           Parameters:
  #             field.delim: ","
  #           SerializationLibrary: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
  # # Partition 2
  # # Create an AWS Glue partition
  # CFNPartitionMon2:
  #   DependsOn: CFNTable
  #   Type: AWS::Glue::Partition
  #   Properties:
  #     CatalogId: !Ref AWS::AccountId
  #     DatabaseName: !Ref CFNDatabaseName
  #     TableName: !Ref CFNTableName1
  #     PartitionInput:
  #       Values:
  #         - 2
  #       StorageDescriptor:
  #         OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
  #         Columns:
  #           - Name: mon
  #             Type: bigint
  #         InputFormat: org.apache.hadoop.mapred.TextInputFormat
  #         Location: s3://wy-sandbox-singapore/test/glue_custom_schema/mon=2/
  #         SerdeInfo:
  #           Parameters:
  #             field.delim: ","
  #           SerializationLibrary: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
